//I'm HuyNho or you can call me DengHwee
#include <bits/stdc++.h>
using namespace std;
#define faster() ios_base::sync_with_stdio(false);cin.tie();cout.tie();
#define matrix vector <vector<long long>>
#define MOD 1000000007
#define el "\n"
#define fi first
#define se second
const long long big = 1e6;

int m, n, u, v;
vector <vector <int>> a;
vector <bool> check;
vector <pair <int,int>> ans;

void DFS(int u) {
    check[u] = 1;
    for (int i = 0 ; i < a[u].size() ; i++)
    {
        int y = a[u][i];
        if ( check[y] == 0 )
        {
            DFS(y);
        }
    }
}

void reset() {
    a.clear();
    a.resize(n+1);
    check.clear();
    check.resize(n+1);
}

int TPLT() {
    int connectedComponent = 0;
    for (int i = 1 ; i <= m ; i++)
    {
        if ( !check[i] )
        {
            connectedComponent++;
            check[i] = 1;
            DFS(i);
        }
    }
    return connectedComponent;
}

void canhCau(int canh, int res, vector <pair <int,int>> e) {
    for (int i = 0 ; i < n ; i++)
    {
        if ( i != canh )
        {
            a[e[i].first].push_back(e[i].second);
            a[e[i].second].push_back(e[i].first);
        }
    }
    int s = TPLT();
    if ( s > res )
    {
        cout << e[canh].first << " " << e[canh].second << " ";
    }
}

int main() {
    faster();
    int t;
    cin >> t;
    while ( t-- )
    {
        cin >> m >> n;
        reset();
        ans.clear();
        vector <pair<int, int>> e;
        for (int i = 0 ; i < n ; i++)
        {
            cin >> u >> v;
            e.push_back({u,v});
            a[u].push_back(v);
            a[v].push_back(u);
        }
        sort(e.begin(), e.end());
        int connectedComponent = TPLT();
        for (int i = 0 ; i < n ; i++)
        {
            reset();
            canhCau(i, connectedComponent, e);
        }
        if ( t != 0 )
        {
            cout << el;
        }
    }
}
